rules_version = '2';
service cloud.firestore {
  function hasRoles(roles) {
    return request.auth.token.role in roles
  }

  function hasId(resource) {
    return resource.id == request.auth.uid
  }

  function authenticated() {
    return request.auth.token != null;
  }

  function admin() {
    return request.auth.token.role == 'admin';
  }

  function user() {
    return request.auth.token.role == 'user';
  }

  function driveItemPublicRead() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_public_read']) && resource.data.metadata['permissions_public_read'] == 'true';
  }

  function driveItemPublicWrite() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_public_write']) && resource.data.metadata['permissions_public_write'] == 'true';
  }

  function driveItemRoleRead() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_roles_' + request.auth.token.role + '_read']) && resource.data.metadata['permissions_roles_' + request.auth.token.role + '_read'] == 'true';
  }

  function driveItemRoleWrite() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_roles_' + request.auth.token.role + '_write']) && resource.data.metadata['permissions_roles_' + request.auth.token.role + '_write'] == 'true';
  }

  function driveItemUserRead() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_users_' + request.auth.uid + '_read']) && resource.data.metadata['permissions_users_' + request.auth.uid + '_read'] == 'true';
  }

  function driveItemUserWrite() {
    return 'metadata' in resource.data && resource.data.metadata.keys().hasAny(['permissions_users_' + request.auth.uid + '_write']) && resource.data.metadata['permissions_users_' + request.auth.uid + '_write'] == 'true';
  }

  match /databases/{database}/documents {

    match /users/{item=**} {
      allow read, write: if admin() || user() || hasId(resource);
    }

    match /roles/{item=**} {
      allow read, write: if admin() || hasId(resource);
    }

    match /user-invites/{item=**} {
      allow read, write: if admin() || hasId(resource);
    }

    match /automatic-emails/{item=**} {
      allow read, write: if admin();
    }

    match /sent-emails/{item=**} {
      allow read, write: if admin();
    }

    match /forms/{item} {
      allow write: if admin();
      allow read: if true;

      match /submissions/{sub} {
        allow read: if admin();
        allow write: if true;
      }
    }

    match /settings/{item} {
      allow read: if true;
      allow write: if admin();
    }

    match /posts/{item} {
      allow read: if resource.data.published || admin();
      allow write: if admin();
    }    

    match /pages/{item=**} {
      allow read: if true;
      allow write: if admin();
    }

    match /drive/{item=**} {
      allow read: if driveItemPublicRead() || driveItemPublicWrite() || driveItemRoleRead() || driveItemRoleWrite() || driveItemUserRead() || driveItemUserWrite();
      allow write: if driveItemPublicWrite() || driveItemRoleWrite() || driveItemUserWrite();
      allow create: if hasRoles(['admin', 'user']);
    }

    match /_search/{item=**} {
      allow read: if hasRoles(['admin', 'user']);
      allow write: if false;
    }

    match /{module}/{document=**} {
      allow read: if hasRoles(['user', 'admin']) || hasId(resource);
      allow write: if hasRoles(['admin']) || hasId(resource);
    }
  }
}
